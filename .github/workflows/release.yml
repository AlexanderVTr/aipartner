name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Run tests
        run: pnpm lint

      - name: Generate Release Title
        id: release_title
        run: |
          # Получаем версию без префикса v
          VERSION=${GITHUB_REF_NAME#v}
          
          # Анализируем коммиты для определения основной темы
          COMMITS=$(git log --oneline $(git describe --tags --abbrev=0 HEAD~1)..HEAD 2>/dev/null || git log --oneline)
          
          # Определяем основную тему релиза
          if echo "$COMMITS" | grep -qi "speech\|voice\|audio\|mic"; then
            THEME="🎤 Voice & Speech Features"
          elif echo "$COMMITS" | grep -qi "chat\|ai\|gpt\|openai"; then
            THEME="🤖 AI Chat Enhancements"
          elif echo "$COMMITS" | grep -qi "auth\|login\|user\|clerk"; then
            THEME="🔐 Authentication Updates"
          elif echo "$COMMITS" | grep -qi "ui\|design\|style\|theme"; then
            THEME="💄 UI/UX Improvements"
          elif echo "$COMMITS" | grep -qi "perf\|speed\|optimize"; then
            THEME="⚡ Performance Boost"
          elif echo "$COMMITS" | grep -qi "fix\|bug\|error"; then
            THEME="🐛 Bug Fixes"
          elif echo "$COMMITS" | grep -qi "db\|database\|supabase"; then
            THEME="🗄️ Database Updates"
          else
            THEME="🚀 New Features"
          fi
          
                     # Формируем название релиза
           RELEASE_NAME="AISHA v${VERSION} - ${THEME}"
          echo "release_name=${RELEASE_NAME}" >> $GITHUB_OUTPUT
          echo "Generated release name: ${RELEASE_NAME}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          name: "${{ steps.release_title.outputs.release_name }}"
          body: |
            ## 🚀 What's Changed
            
            Check the [full changelog](./CHANGELOG.md) for detailed changes.
            
            **Deployment**: This release is automatically deployed to production via Vercel.
            
            ### 🎯 Highlights
            - 🎤 Speech-to-text voice input
            - 🤖 Enhanced AI chat capabilities  
            - 🔧 Performance improvements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Убираю блок Deploy to Production - пусть Vercel сам деплоит 